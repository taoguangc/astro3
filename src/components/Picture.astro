---
import type { ImageOutputFormat } from 'astro'
import { getImage } from 'astro:assets'

type Props = {
  src: ImageMetadata
  alt: string
  sizes: number[]
  format?: ImageOutputFormat
  loading?: 'lazy' | 'eager'
}

async function generatePicture({ src, format, sizes }: Omit<Props, 'alt'>) {
  const imgSrcSet = sizes.map(async size => {
    const image = await getImage({ src, width: size, format })
    return `${image.src} ${size}w`
  })

  const imgSrc = await getImage({ src, width: Math.max(...sizes), format })

  return {
    srcSet: await Promise.all(imgSrcSet),
    imgSrc: imgSrc.src
  }
}

const { src, alt, sizes, format, loading } = Astro.props

const { srcSet, imgSrc } = await generatePicture({
  src,
  sizes,
  format
})
---

<img srcset={srcSet.join(', ')} alt={alt} src={imgSrc} loading={loading} />
